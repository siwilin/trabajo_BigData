[
  {
    "objectID": "my_trabajo_bigdata.html",
    "href": "my_trabajo_bigdata.html",
    "title": "Spotify Wrapped 2024 en R",
    "section": "",
    "text": "Vamos a utilizar los datos de nuestro histórico de la cuenta de Spotify. Se tienen que solicitar a través de la sección de privacidad de nuestra cuenta (a través de este enlace se puede).\nLa intención es emular el Spotify Wrapped original, además de poder constatar si los datos mostrados por el Wrapped coinciden con los obtenidos por nuestra cuenta.\nSi se manipulan los datos del archivo .json para meterlo todo en un archivo, este código puede servirle a cualquier persona que quiera hacer lo mismo!"
  },
  {
    "objectID": "my_trabajo_bigdata.html#artistas-este-año",
    "href": "my_trabajo_bigdata.html#artistas-este-año",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Artistas este año",
    "text": "Artistas este año\n\n\n\n\n\n\nSegún Spotify, he escuchado a 2070 artistas diferentes a lo largo del año. Intentaremos replicar este dato utilizando el siguiente código:\n\nCódigoartistasunicos &lt;- my_spotify %&gt;%\n    summarize(totalartistas = n_distinct(artista))\n\n\nEl código indica que hemos escuchado un total de 2181 artistas diferentes. No es el mismo dato, pero se acerca lo suficiente como para considerar que no se trata de un error en el cálculo de Spotify, si no que existe una diferencia en el marco temporal elegido, ya que yo he recibido datos posteriores a la fecha de la publicación del Wrapped.\n“Reverse Engineering” el intervalo temporal\nCon el siguiente trozo de código representaré la evolución del número de artistas diferentes escuchados a lo largo del año, intentando encontrar el día exacto en el que ese número llega a los 2070 que indica Spotify, para así estar seguro de que los datos empleados son los mismos que los de Spotify.\nEste fragmento de código ha sido especialmente complejo hasta encontrar el uso correcto para distinct del paquete dplyr, que elimina los duplicados globales del dataset. Por ejemplo, independientemente del numero de veces que haya escuchado, por ejemplo, a Daft Punk, distinct no tiene en cuenta ninguno excepto el primer registro - lo que quiere decir que cada artista se cuenta una única vez.\n\nCódigoartistasunicos_acumulado &lt;- my_spotify %&gt;% \n    arrange(dia) %&gt;% \n    distinct(artista, .keep_all = TRUE) %&gt;% \n    group_by(dia) %&gt;% \n    summarize(totalartistas = n_distinct(artista)) %&gt;% \n    mutate(sumaartistas = cumsum(totalartistas))\n\ngraficoartistas &lt;- artistasunicos_acumulado %&gt;%\n    ggplot(aes(x = dia, y = sumaartistas)) + \n    geom_col(aes(fill = sumaartistas)) +\n    scale_fill_gradient(high = \"#1db954\", low = \"#1db954\") + \n    labs(x = \"Fecha\", y = \"Nº artistas\") + \n    ggtitle(\"Número acumulado de artistas únicos escuchados\") +\n    theme_minimal()+\n    scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\")+\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n    theme(legend.position = \"none\")\n\ndiadatos &lt;- artistasunicos_acumulado %&gt;%\n  filter(sumaartistas &gt;= 2070)%&gt;%\n  slice_head(n = 1) %&gt;%\n  pull(dia)\n\ngraficoartistas\n\n\n\n\n\n\n\nHemos descubierto que el número de artistas llega a lo indicado por Spotify el día 2024-11-24 (24 de noviembre). Gracias a esto, se puede proceder con la certeza de que tenemos los datos en el mismo marco temporal que Spotify. Sin embargo, no vamos a aplicar la funcion filter a my_spotify todavía, vamos a ver si esta fecha coincide con la que obtenemos del total de canciones diferentes y el total de minutos escuchados."
  },
  {
    "objectID": "my_trabajo_bigdata.html#canciones-este-año",
    "href": "my_trabajo_bigdata.html#canciones-este-año",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Canciones este año",
    "text": "Canciones este año\nSegún Spotify, he escuchado un total de 2745 canciones diferentes este año. Vamos a hacer lo mismo que en el apartado de los artistas:\n\nCódigocancionesunicas &lt;- my_spotify %&gt;%\n    summarize(totalcanciones = n_distinct(cancion))\n\n\nSegún nuestro dataset, hemos escuchado 4196 canciones diferentes.\n\n\n\n\n\n\nAqui si que hay una diferencia considerable entre el dato que obtenemos de nuestro dataset y el que obtenemos de Spotify. De todas formas vamos a proceder a calcular la fecha de referencia\n\nCódigo\ncancionesunicas_acumulado &lt;- my_spotify %&gt;% \n    distinct(cancion, .keep_all = TRUE) %&gt;%\n    arrange(dia) %&gt;% \n    group_by(dia) %&gt;% \n    summarize(totalcanciones = n_distinct(cancion)) %&gt;% \n    mutate(sumacanciones = cumsum(totalcanciones))\n\ngraficocanciones &lt;- cancionesunicas_acumulado %&gt;%\n    ggplot(aes(x = dia, y = sumacanciones)) + \n    geom_col(aes(fill = sumacanciones)) +\n    scale_fill_gradient(high = \"#1db954\", low = \"#1db954\") + \n    labs(x = \"Fecha\", y = \"Nº canciones\") + \n    ggtitle(\"Número acumulado de canciones únicas escuchadas\") +\n    theme_minimal()+\n    scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\")+\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n    theme(legend.position = \"none\")\n\ndiadatos2 &lt;- cancionesunicas_acumulado %&gt;%\n  filter(sumacanciones &gt;= 2745)%&gt;%\n  slice_head(n = 1) %&gt;%\n  pull(dia)\n\ngraficocanciones\n\n\n\n\n\n\n\nEl dia en el que el total de canciones diferentes llega al numero indicado por Spotify es el 2024-07-24 (24 de julio), nada que ver con la fecha extraida del total de artistas diferentes. Resulta un tanto confuso ya que esperaba que las fechas coincidieran o se acercaran un poco más, y 4 meses de diferencia es demasiada."
  },
  {
    "objectID": "my_trabajo_bigdata.html#mis-minutos-de-escucha",
    "href": "my_trabajo_bigdata.html#mis-minutos-de-escucha",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Mis minutos de escucha",
    "text": "Mis minutos de escucha\nVamos a hacer lo mismo que en los 2 anteriores apartados, esta vez para los minutos totales de escucha, que, según Spotify, son 20911\n\n\n\n\n\n\n\nCódigominutosescucha &lt;- my_spotify %&gt;% \n    summarize(totalminutos = sum(minutos))%&gt;%\n    pull(totalminutos) %&gt;%\n    as.integer()\n\ntopmin &lt;- my_spotify %&gt;%\n  group_by(dia) %&gt;%\n  summarize(totalminutos = sum(minutos)) %&gt;%\n  arrange(desc(totalminutos)) %&gt;%\n  slice_head(n = 1)\n\ntopmin_dia &lt;- topmin%&gt;%\n  pull(dia)\n\ntopmin_min &lt;- topmin%&gt;%\n  pull(totalminutos) %&gt;%\n  as.integer()\n\n\nSegún nuestro dataset hemos escuchado un total de 22402 minutos de música, siendo el día que más minutos he escuchado el 2024-07-28 con un total de 552 minutos escuchados (otro dato que Spotify lleva mal)\n\nCódigototalminutos &lt;- my_spotify %&gt;% \n    arrange(dia) %&gt;% \n    group_by(dia) %&gt;% \n    summarize(totalminutos = sum(minutos))%&gt;%\n    mutate(sumaminutos = cumsum(totalminutos))\n\ngraficominutos &lt;- totalminutos %&gt;%\n    ggplot(aes(x = dia, y = sumaminutos)) + \n    geom_col(aes(fill = sumaminutos)) +\n    scale_fill_gradient(high = \"#1db954\", low = \"#1db954\") + \n    labs(x = \"Fecha\", y = \"Nº minutos\") + \n    ggtitle(\"Número total de minutos escuchados\") +\n    theme_minimal()+\n    scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\")+\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n    theme(legend.position = \"none\")\n\ndiadatos3 &lt;- totalminutos %&gt;%\n  filter(sumaminutos &gt;= 20911)%&gt;%\n  slice_head(n = 1) %&gt;%\n  pull(dia)\n\ngraficominutos\n\n\n\n\n\n\n\nEn este caso, el dia en el que los datos coinciden (2024-11-16) es un poco más cercano a la primera fecha obtenida, pero sigue sin coincidir.\nResulta extremadamente complejo obtener una conclusión lógica sobre el funcionamiento de los intervalos temporales seleccionados por Spotify para crear el Wrapped, ya que parece que cada dato individual ha sido obtenido en una fecha diferente y seleccionado de manera aparentemente arbitraria.\nOtra explicación podría ser que el intervalo temporal es anterior al 1 de enero de 2024, pero por motivos evidentes (un Wrapped de 2024 no deberia tener datos de 2023) no voy a proceder a cambiar ese criterio en mi base de datos."
  },
  {
    "objectID": "my_trabajo_bigdata.html#mis-artistas-favoritos",
    "href": "my_trabajo_bigdata.html#mis-artistas-favoritos",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Mis artistas favoritos",
    "text": "Mis artistas favoritos\n\n\n\n\n\n\nSegún datos de Spotify, mi artista más escuchado es mimofr, con un total de 497 minutos de escucha. Me sorprende mucho, porque este artista hace unas canciones (instrumentales) muy cortas que no he escuchado durante más tiempo que el resto de los artistas. Me sorprende aún más cuando, en la lista del top 5 de artistas, no aparezca mi músico favorito de la actualidad, Masayoshi Takanaka (un genio, lo quiero mucho). Os dejo abajo una cancion de prueba, por si a alguien le interesa:\n\nPara averiguar cómo recolecta los datos Spotify para realizar el Wrapped, voy a extraer el top de artistas en 2 formatos diferentes: El tiempo reproducido de cada artista y el número de reproducciones únicas.\nTop 5 (tiempo)\n\nCódigotop5artistas_tiempo &lt;- my_spotify %&gt;%\n  group_by(artista) %&gt;%\n  summarize(minutosartista = sum(minutos)) %&gt;%\n  arrange(desc(minutosartista)) %&gt;%\n  slice_head(n = 5)\n\ntopartista_tiempo &lt;- top5artistas_tiempo%&gt;%\n  slice_head(n=1)%&gt;%\n  pull(minutosartista)%&gt;%\n  as.integer()\n\ntopartista &lt;- top5artistas_tiempo%&gt;%\n  slice_head(n=1)%&gt;%\n  pull(artista)\n\ntop5artistas_tiempo %&gt;%\n  gt() %&gt;%\n  tab_header (\n    title = \"Top 5 artistas 2024 - Playtime\",\n    subtitle = \"Minutos escuchados por artista\"\n    ) %&gt;%\n  cols_label(\n    artista = \"Artista\",\n    minutosartista = \"Minutos\" \n    ) %&gt;%\n  fmt_number (\n    columns = \"minutosartista\",\n    decimals = 0 \n    )\n\n\n\n\n\n\nTop 5 artistas 2024 - Playtime\n\n\nMinutos escuchados por artista\n\n\nArtista\nMinutos\n\n\n\n\nDaft Punk\n546\n\n\nMasayoshi Takanaka\n473\n\n\nmimofr\n460\n\n\nCom Truise\n417\n\n\nViliam Lane\n335\n\n\n\n\n\n\n\n\n\n\n\n\nEFECTIVAMENTE! El top 5 de artistas que tiene Spotify y el que he calculado yo no son iguales. Si nos basamos en el tiempo de escucha de cada artista, mimofr baja al tercer puesto, siendo superado en minutos por Daft Punk y el previamente mencionado Masayoshi Takanaka. Entonces, ¿de donde sale este top 5? ¿Cómo esta contabilizando Spotify a quién escucho más?\nTop 5 (nº reproducciones)\n\nCódigotop5artistas_reproducciones &lt;- my_spotify %&gt;%\n  group_by(artista) %&gt;%\n  summarize(reproducciones = n()) %&gt;% \n  arrange(desc(reproducciones)) %&gt;%\n  slice_head(n = 5)\n\ntop5artistas_reproducciones_tabla &lt;- top5artistas_reproducciones %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Top 5 artistas 2024 - Reproducciones\",\n    subtitle = \"Número de reproducciones por artista\"\n  ) %&gt;%\n  cols_label(\n    artista = \"Artista\",\n    reproducciones = \"Reproducciones\"\n  ) %&gt;%\n  fmt_number(\n    columns = \"reproducciones\",\n    decimals = 0\n  )\n\ntop5artistas_reproducciones_tabla\n\n\n\n\n\n\nTop 5 artistas 2024 - Reproducciones\n\n\nNúmero de reproducciones por artista\n\n\nArtista\nReproducciones\n\n\n\n\nmimofr\n270\n\n\nDaft Punk\n223\n\n\nELVEN DIOR\n213\n\n\nViliam Lane\n191\n\n\nBaltra\n180\n\n\n\n\n\n\nAhora sí que coinciden los datos, lo que nos confirma que Spotify recolecta los tops de artistas basándose en el número de reproducciones y no en el tiempo de escucha.\nMe parece una forma de medirlo muchísimo peor que si se midiera en minutos: en el caso de que escuchara artistas con canciones muy largas (DJ’s o artistas de electrónica, rock, metal, etc.) y artistas con canciones muy cortas (instrumentales, música liminal, etc.), ¿no sería coherente medirlo todo basándose en el tiempo que le dedico a escuchar la música, en vez de en cuántas veces le he dado al botón de play?"
  },
  {
    "objectID": "my_trabajo_bigdata.html#mis-canciones-favoritas",
    "href": "my_trabajo_bigdata.html#mis-canciones-favoritas",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Mis canciones favoritas",
    "text": "Mis canciones favoritas\n\n\n\n\n\n\nSegún datos de Spotify, mi canción más escuchada es Never Let Go Of Me, con un total de 113 reproducciones. De nuevo, es probable que la canción que haya escuchado más tiempo sea una diferente, ya que estoy casi seguro de que Spotify se ha basado en el número de reproducciones en este caso también.\nPara averiguarlo voy a extraer el top de canciones en 2 formatos diferentes: El tiempo reproducido de cada artista y el número de reproducciones únicas. Esta vez, lo enseñaré en un formato de gráfico (por no repetir el formato de las tablas anteriores)\nTop 5 (tiempo)\n\nCódigotopcanciones_tiempo &lt;- my_spotify %&gt;% \n    group_by(cancion) %&gt;% \n    summarize(totalminutos = sum(minutos)) %&gt;% \n    arrange(desc(totalminutos)) %&gt;%\n    slice_head(n = 5)\n\ntopcancion_tiempo &lt;- topcanciones_tiempo%&gt;%\n  slice_head(n=1)%&gt;%\n  pull(totalminutos)%&gt;%\n  as.integer()\n\ntopcancion &lt;- topcanciones_tiempo%&gt;%\n  slice_head(n=1)%&gt;%\n  pull(cancion)\n  \nt5tiempografico &lt;- topcanciones_tiempo %&gt;%\n    ggplot(aes(x = reorder(cancion, totalminutos), y = totalminutos)) +\n    geom_col(aes(fill = totalminutos)) +\n    scale_fill_gradient(low = \"#1db954\", high = \"#1db954\") + \n    labs(x= \"\", y= \"Minutos\") + \n    ggtitle(\"Top 5 canciones más escuchadas\") +\n    theme(axis.text.x = element_text(angle = 90)) +\n    theme(legend.position = \"none\")+\n    coord_flip()\n\nt5tiempografico\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 (nº reproducciones)\n\nCódigotopcanciones_repro &lt;- my_spotify %&gt;% \n    group_by(cancion) %&gt;% \n    summarize(reproducciones = n()) %&gt;% \n    arrange(desc(reproducciones)) %&gt;%\n    slice_head(n = 5) \n  \nt5reprografico &lt;- topcanciones_repro%&gt;%   \n    ggplot(aes(x = reorder(cancion, reproducciones), \n               y = reproducciones)) +\n    geom_col(aes(fill = reproducciones)) +\n    scale_fill_gradient(low = \"#1db954\", high = \"#1db954\") + \n    labs(x= \"\", y= \"Reproducciones\") + \n    ggtitle(\"Top 5 canciones más reproducidas\") +\n    theme(axis.text.x = element_text(angle = 90)) +\n    theme(legend.position = \"none\")+\n    coord_flip()\n\nt5reprografico \n\n\n\n\n\n\n\nNuevamente, la lista vuelve a estar basada en la cantidad de veces que le das al play a una canción y no en los minutos que pasas escuchándola"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Código\n\n\n\n\nHolaaa, Soy Carlos Eduardo Albornoz Manzano, estudiante del Grado de Economía en la Universidad de Valencia.\nEste es el trabajo final de la asignatura “Programación y manejo de datos en la era del Big Data”.\nEsta es la web de la asignatura: clic para ver.\nAquí hay trabajos de mis compañeros: clic para ver.\nMi trabajo se titula “Spotify Wrapped 2024 en R”. En el trabajo utilizo mis datos históricos de Spotify para crear un dataframe, a partir del cual poder obtener diferentes conceptos como mi top de artistas, top de canciones, total de minutos escuchados, etc.\nEl trabajo puede verse AQUÍ.\nEl código usado en el trabajo está en el archivo index.R, en la carpeta de github. Si quieres utilizar el código con tu historial, pídeselo a Spotify a través de este enlace y asegúrate de tener todos los datos del año copiados dentro de un archivo que llames data.json (los .json se pueden editar en el bloc de notas).\n\n\n\n\n\nReutilizarCC BY 4.0"
  },
  {
    "objectID": "my_trabajo_bigdata.html#otras-funciones-interesantes",
    "href": "my_trabajo_bigdata.html#otras-funciones-interesantes",
    "title": "Spotify Wrapped 2024 en R",
    "section": "Otras funciones interesantes",
    "text": "Otras funciones interesantes\nNº de artistas escuchados cada día\n\nCódigoartistaspordia &lt;- my_spotify %&gt;% \n    group_by(dia) %&gt;% \n       summarize(totalartistas = n_distinct(artista)) %&gt;% \n    arrange(dia) %&gt;%\n    ggplot(aes(x = dia, y = totalartistas)) + \n    geom_col(aes(fill = totalartistas)) +\n    scale_fill_gradient(high = \"#1db954\", low = \"#1db954\") + \n    labs(x= \"Fecha\", y= \"Nº artistas\") + \n    ggtitle(\"Numero de artistas escuchados\") + \n    theme(legend.position = \"none\")\nartistaspordia\n\n\n\n\n\n\n\nTotal de horas escuchadas cada semana\n\nCódigohorasmusica &lt;- my_spotify %&gt;% \n    group_by(dia) %&gt;% \n    group_by(dia = floor_date(dia, \"week\")) %&gt;%\n    summarize(horas = sum(minutos) / 60) %&gt;% \n    arrange(dia) %&gt;% \n    ggplot(aes(x = dia, y = horas)) + \n    geom_col(aes(fill = horas)) +\n    scale_fill_gradient(low = \"#1db954\", high = \"#1db954\") + \n    labs(x= \"FECHA\", \n         y= \"HORAS\",\n         title = \"Gráfico 1: Horas de música escuchadas en 2024\",\n         subtitle = \"(Diferenciando entre semanas)\",\n         caption = \"Fuente: Datos de mi propia cuenta de Spotify\") + \n    theme(legend.position = \"none\")\nhorasmusica"
  }
]